version: '3'

services:

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - '80:80'
      - '443:443'
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./vhost.d:/etc/nginx/vhost.d:ro
      - ./certs:/etc/nginx/certs
      - ./html:/usr/share/nginx/html
      - ./proxy.conf:/etc/nginx/proxy.conf

  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - DEFAULT_EMAIL=aleksey@garpix.com
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/acme.sh
      - ./vhost.d:/etc/nginx/vhost.d
      - ./certs:/etc/nginx/certs
      - ./html:/usr/share/nginx/html

  server:
    image: nginx:alpine
    restart: always
    depends_on:
      - web
    volumes:
     - ./nginx.conf:/etc/nginx/nginx.conf
     - ./public:/code/public
    environment:
     - VIRTUAL_HOST=skills.garpix.com
     - LETSENCRYPT_HOST=skills.garpix.com

  web:
    build: .
    command: sh -c "/code/run.sh"
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres
    volumes:
      - ./public:/code/public

  celery:
    build: .
    command: celery -A app worker --loglevel=info -B
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres
    volumes:
      - ./public:/code/public

  neo4j:
    image: neo4j:5.6.0
    env_file:
      - .env
    volumes:
      - ./dumps/neo4j:/dumps
      - ./data/neo4j:/data
      - ./logs/neo4j:/logs

  postgres:
    image: postgres:14.5-alpine
    restart: always
    env_file:
    - .env
    volumes:
      - ./dumps/postgresql:/dumps
      - ./data/postgresql:/var/lib/postgresql/data

  redis:
     image: redis:alpine
